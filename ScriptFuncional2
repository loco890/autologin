#!/bin/bash

#Base rout of the Script for logs
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_FILE="$SCRIPT_DIR/autologin.log"

LOCKFILE="$SCRIPT_DIR/.autologin.lock"

# Si ya hay otra instancia corriendo, salir
if [ -e "$LOCKFILE" ]; then
    echo "$(date '+%F %T') - Ya hay una instancia en ejecución. Saliendo." >> "$LOG_FILE"
    exit 1
fi

# Crear el archivo de bloqueo
touch "$LOCKFILE"

# Asegurar que se borre el lock si el script termina
trap "rm -f '$LOCKFILE'" EXIT

# Mirar si el Archivo de credeciales existe
if [ ! -f "$SCRIPT_DIR/credential.conf" ]; then
    echo "$(date '+%F %T') - ERROR: Archivo de credenciales no encontrado." >> "$LOG_FILE"
    exit 1
fi

#Cositas
source "$SCRIPT_DIR/credential.conf"


# Variables de Telegram
MESSAGE="⚠️ Atención: El autologin falló 5 veces seguidas. Revisa la red de RUB."

# Configuraciones
LOGIN_URL="https://login.ruhr-uni-bochum.de/cgi-bin/laklogin"
IPADDR="10.4.30.34"
CHECK_HOST="1.1.1.1"  # o cualquier IP confiable (como 1.1.1.1)

# Control de intentos fallidos
MAX_FAILED=5
FAILED_COUNT=0

#Tamano maximo de logs en bytes
MAX_LOG_SIZE=100000

# Loop infinito
while true; do
	# Rotación de log si es demasiado grande
    if [ -f "$LOG_FILE" ] && [ "$(stat -c%s "$LOG_FILE")" -gt $MAX_LOG_SIZE ]; then
        mv "$LOG_FILE" "$LOG_FILE.old"
        touch "$LOG_FILE"
        echo "$(date '+%F %T') - Log rotado automáticamente." >> "$LOG_FILE"
    fi
    
    # ¿Hay conexión a internet?
    if ! ping -c 1 -W 3 $CHECK_HOST &> /dev/null; then
        echo "$(date '+%F %T') - No hay internet. Intentando login..." >> "$LOG_FILE"

        # Intentar login
        wget --quiet --method=POST \
             --header="Content-Type: application/x-www-form-urlencoded" \
             --body-data="code=1&loginid=$USERNAME&password=$PASSWORD&ipaddr=$IPADDR&action=Login" \
             "$LOGIN_URL" -O /dev/null

        echo "$(date '+%F %T') - Login enviado." >> "$LOG_FILE"

        # Esperar unos segundos y verificar si se logró conexión
        sleep 5
        if ping -c 1 -W 3 $CHECK_HOST &> /dev/null; then
            echo "$(date '+%F %T') - Conexión restaurada después del login." >> "$LOG_FILE"
            FAILED_COUNT=0
         
        else
            FAILED_COUNT=$((FAILED_COUNT+1))
            echo "$(date '+%F %T') - Login fallido ($FAILED_COUNT/$MAX_FAILED)." >> "$LOG_FILE"
        fi

        # Si falló 5 veces seguidas, dormir 20 minutos
        if [ "$FAILED_COUNT" -ge "$MAX_FAILED" ]; then
            echo "$(date '+%F %T') - Se alcanzó el máximo de intentos fallidos. Durmiendo 20 minutos..." >> "$LOG_FILE"
 
			# Enviar alerta a Telegram
			curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
    		-d chat_id="$CHAT_ID" \
    		-d text="$MESSAGE"
    		
            sleep 1200
            FAILED_COUNT=0
        fi
    else
        # Si ya hay internet, reiniciar contador y seguir tranquilo
        FAILED_COUNT=0
    fi

    # Esperar 60 segundos antes de la siguiente verificación
    sleep 60
done
